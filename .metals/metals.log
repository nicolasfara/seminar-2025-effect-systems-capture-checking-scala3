2025.05.12 20:02:32 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:34 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:34 INFO  Running List(/usr/bin/scala-cli, setup-ide, /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3)
2025.05.12 20:02:34 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:34 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
May 12, 2025 8:02:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1
May 12, 2025 8:02:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 9
May 12, 2025 8:02:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8
May 12, 2025 8:02:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11
2025.05.12 20:02:34 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:35 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:35 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:02:35 INFO  Attempting to connect to the build server...
2025.05.12 20:02:35 INFO  Running BSP server List(/usr/bin/scala-cli, bsp, --json-options, /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.scala-build/ide-options-v2.json, --json-launcher-options, /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.scala-build/ide-launcher-options.json, --envs-file, /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.scala-build/ide-envs.json, /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3)
2025.05.12 20:02:35 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/bsp.trace.json or /home/nicolas/.cache/metals/bsp.trace.json
2025.05.12 20:02:34 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:35 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom
2025.05.12 20:02:34 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:36 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:02:35 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom
2025.05.12 20:02:35 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom.sha1
2025.05.12 20:02:36 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:36 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom.sha1
2025.05.12 20:02:36 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom
2025.05.12 20:02:36 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:36 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom
2025.05.12 20:02:36 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom.sha1
2025.05.12 20:02:36 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:37 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom.sha1
2025.05.12 20:02:37 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom
2025.05.12 20:02:37 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.pom
2025.05.12 20:02:37 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom
2025.05.12 20:02:37 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom
2025.05.12 20:02:37 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom
2025.05.12 20:02:36 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:37 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:37 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom
2025.05.12 20:02:37 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom.sha1
2025.05.12 20:02:37 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:37 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:37 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom.sha1
2025.05.12 20:02:37 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom
2025.05.12 20:02:37 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:37 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom
2025.05.12 20:02:37 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom
2025.05.12 20:02:37 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom.sha1
2025.05.12 20:02:37 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom.sha1
2025.05.12 20:02:37 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:38 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom.sha1
2025.05.12 20:02:38 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom.sha1
2025.05.12 20:02:38 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom
2025.05.12 20:02:38 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom
2025.05.12 20:02:37 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:38 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom
2025.05.12 20:02:38 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom.sha1
2025.05.12 20:02:39 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:38 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom
2025.05.12 20:02:38 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom.sha1
2025.05.12 20:02:39 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:38 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom
2025.05.12 20:02:38 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom.sha1
2025.05.12 20:02:38 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom.sha1
2025.05.12 20:02:38 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom
2025.05.12 20:02:39 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:38 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.pom
2025.05.12 20:02:39 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom.sha1
2025.05.12 20:02:39 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom.sha1
2025.05.12 20:02:39 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom
2025.05.12 20:02:39 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:39 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.pom
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.pom
2025.05.12 20:02:39 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom
2025.05.12 20:02:39 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom
2025.05.12 20:02:39 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm/9.8/asm-9.8.pom
2025.05.12 20:02:39 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:39 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm/9.8/asm-9.8.pom
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom
2025.05.12 20:02:39 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom.sha1
2025.05.12 20:02:39 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom.sha1
2025.05.12 20:02:39 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm/9.8/asm-9.8.pom.sha1
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom.sha1
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm/9.8/asm-9.8.pom.sha1
2025.05.12 20:02:39 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom.sha1
2025.05.12 20:02:39 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom
2025.05.12 20:02:39 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm/9.8/asm-9.8.pom
2025.05.12 20:02:39 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom
2025.05.12 20:02:40 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:40 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom
2025.05.12 20:02:40 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom
2025.05.12 20:02:40 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom.sha1
2025.05.12 20:02:40 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom.sha1
2025.05.12 20:02:40 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm/9.8/asm-9.8.pom
2025.05.12 20:02:40 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm/9.8/asm-9.8.pom.sha1
2025.05.12 20:02:40 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:40 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom.sha1
2025.05.12 20:02:40 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm/9.8/asm-9.8.pom.sha1
2025.05.12 20:02:40 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom.sha1
2025.05.12 20:02:40 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom
2025.05.12 20:02:40 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/ow2/asm/asm/9.8/asm-9.8.pom
2025.05.12 20:02:40 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom
2025.05.12 20:02:40 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/ow2/asm/asm-util/9.8/asm-util-9.8.pom
2025.05.12 20:02:40 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/ow2/asm/asm/9.8/asm-9.8.pom
2025.05.12 20:02:40 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.pom
2025.05.12 20:02:40 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom
2025.05.12 20:02:40 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom
2025.05.12 20:02:41 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:02:41 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:41 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom
2025.05.12 20:02:41 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom
2025.05.12 20:02:41 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom.sha1
2025.05.12 20:02:41 INFO  BSP server: Downloading https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom.sha1
2025.05.12 20:02:41 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:41 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom.sha1
2025.05.12 20:02:41 INFO  BSP server: Downloaded https://oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom.sha1
2025.05.12 20:02:41 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom
2025.05.12 20:02:41 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom
2025.05.12 20:02:41 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:41 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:41 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom
2025.05.12 20:02:41 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom.sha1
2025.05.12 20:02:41 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom
2025.05.12 20:02:41 INFO  BSP server: Downloading https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom.sha1
2025.05.12 20:02:42 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom.sha1
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom
2025.05.12 20:02:42 INFO  BSP server: Downloaded https://s01.oss.sonatype.org/content/repositories/snapshots/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom.sha1
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom
2025.05.12 20:02:42 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.pom
2025.05.12 20:02:42 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.pom
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.jar
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.jar
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.jar
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.jar
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.jar
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/ow2/asm/asm-util/9.8/asm-util-9.8.jar
2025.05.12 20:02:42 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/ow2/asm/asm-analysis/9.8/asm-analysis-9.8.jar
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.jar
2025.05.12 20:02:43 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:42 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/ow2/asm/asm-tree/9.8/asm-tree-9.8.jar
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/ow2/asm/asm/9.8/asm-9.8.jar
2025.05.12 20:02:42 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/ow2/asm/asm-util/9.8/asm-util-9.8.jar
2025.05.12 20:02:42 INFO  BSP server: Downloading https://repo1.maven.org/maven2/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.jar
2025.05.12 20:02:42 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/ow2/asm/asm/9.8/asm-9.8.jar
2025.05.12 20:02:43 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:42 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/bloop-shared_2.12/2.0.10/bloop-shared_2.12-2.0.10.jar
2025.05.12 20:02:43 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:44 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/bloop-backend_2.12/2.0.10/bloop-backend_2.12-2.0.10.jar
2025.05.12 20:02:44 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/com-microsoft-java-debug-core/0.34.0+36/com-microsoft-java-debug-core-0.34.0+36.jar
2025.05.12 20:02:44 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:02:44 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:44 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/scala-debug-adapter_2.12/4.2.5/scala-debug-adapter_2.12-4.2.5.jar
2025.05.12 20:02:44 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/ch/epfl/scala/bloop-frontend_2.12/2.0.10/bloop-frontend_2.12-2.0.10.jar
2025.05.12 20:02:44 INFO  BSP server: Starting compilation server
2025.05.12 20:02:45 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:45 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:45 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:46 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:46 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.7.0/scala3-library_3-3.7.0-sources.jar
2025.05.12 20:02:46 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala. Using presentation compiler with project's scala-library version: 3.3.5
2025.05.12 20:02:46 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.7.0/scala3-library_3-3.7.0-sources.jar
2025.05.12 20:02:46 INFO  BSP server: Downloading https://repo1.maven.org/maven2/com/sourcegraph/semanticdb-javac/0.10.0/semanticdb-javac-0.10.0.pom
2025.05.12 20:02:46 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/com/sourcegraph/semanticdb-javac/0.10.0/semanticdb-javac-0.10.0.pom
2025.05.12 20:02:46 INFO  BSP server: Downloading https://repo1.maven.org/maven2/com/sourcegraph/semanticdb-javac/0.10.0/semanticdb-javac-0.10.0.jar
2025.05.12 20:02:47 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:02:48 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/com/sourcegraph/semanticdb-javac/0.10.0/semanticdb-javac-0.10.0.jar
2025.05.12 20:02:48 INFO  time: Connected to build server in 13s
2025.05.12 20:02:48 INFO  Connected to Build server: scala-cli v1.8.0
2025.05.12 20:02:49 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:02:51 INFO  time: Imported build in 2.4s
2025.05.12 20:02:56 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:02:57 INFO  time: indexed workspace in 6.38s
2025.05.12 20:05:00 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:00 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.28s
2025.05.12 20:05:13 INFO  Skipping reload with status 'Installed'
2025.05.12 20:05:20 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:20 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 20:05:22 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:22 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.28s
2025.05.12 20:05:24 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:26 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 1.39s
2025.05.12 20:05:28 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:28 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.72s
2025.05.12 20:05:33 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:33 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.12 20:05:36 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:36 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 20:05:37 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:37 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 93ms
2025.05.12 20:05:43 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:43 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.93s
2025.05.12 20:05:45 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:45 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.29s
2025.05.12 20:05:48 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:48 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:05:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:05:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.22s
2025.05.12 20:06:36 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:06:36 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.31s
2025.05.12 20:06:52 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:06:52 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.2s
2025.05.12 20:06:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:06:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.22s
2025.05.12 20:07:00 INFO  BSP server: Downloading https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz
2025.05.12 20:07:06 INFO  BSP server: Still downloading:
2025.05.12 20:07:06 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (5.75 %, 11898432 / 206919519)
2025.05.12 20:07:06 INFO  BSP server: 
2025.05.12 20:07:12 INFO  BSP server: Still downloading:
2025.05.12 20:07:12 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (12.65 %, 26181568 / 206919519)
2025.05.12 20:07:12 INFO  BSP server: 
2025.05.12 20:07:18 INFO  BSP server: Still downloading:
2025.05.12 20:07:18 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (19.52 %, 40386496 / 206919519)
2025.05.12 20:07:18 INFO  BSP server: 
2025.05.12 20:07:24 INFO  BSP server: Still downloading:
2025.05.12 20:07:24 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (26.44 %, 54704896 / 206919519)
2025.05.12 20:07:24 INFO  BSP server: 
2025.05.12 20:07:30 INFO  BSP server: Still downloading:
2025.05.12 20:07:30 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (33.35 %, 68999104 / 206919519)
2025.05.12 20:07:30 INFO  BSP server: 
2025.05.12 20:07:36 INFO  BSP server: Still downloading:
2025.05.12 20:07:36 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (40.25 %, 83291072 / 206919519)
2025.05.12 20:07:36 INFO  BSP server: 
2025.05.12 20:07:42 INFO  BSP server: Still downloading:
2025.05.12 20:07:42 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (47.14 %, 97533952 / 206919519)
2025.05.12 20:07:42 INFO  BSP server: 
2025.05.12 20:07:48 INFO  BSP server: Still downloading:
2025.05.12 20:07:48 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (54.04 %, 111816388 / 206919519)
2025.05.12 20:07:48 INFO  BSP server: 
2025.05.12 20:07:54 INFO  BSP server: Still downloading:
2025.05.12 20:07:54 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (60.39 %, 124956356 / 206919519)
2025.05.12 20:07:54 INFO  BSP server: 
2025.05.12 20:08:00 INFO  BSP server: Still downloading:
2025.05.12 20:08:00 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (67.59 %, 139849412 / 206919519)
2025.05.12 20:08:00 INFO  BSP server: 
2025.05.12 20:08:06 INFO  BSP server: Still downloading:
2025.05.12 20:08:06 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (74.50 %, 154152644 / 206919519)
2025.05.12 20:08:06 INFO  BSP server: 
2025.05.12 20:08:12 INFO  BSP server: Still downloading:
2025.05.12 20:08:12 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (81.43 %, 168491302 / 206919519)
2025.05.12 20:08:12 INFO  BSP server: 
2025.05.12 20:08:18 INFO  BSP server: Still downloading:
2025.05.12 20:08:18 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (88.25 %, 182614310 / 206919519)
2025.05.12 20:08:18 INFO  BSP server: 
2025.05.12 20:08:24 INFO  BSP server: Still downloading:
2025.05.12 20:08:24 INFO  BSP server: https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz (95.17 %, 196933926 / 206919519)
2025.05.12 20:08:24 INFO  BSP server: 
2025.05.12 20:08:28 INFO  BSP server: Downloaded https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.7%2B6/OpenJDK21U-jdk_x64_linux_hotspot_21.0.7_6.tar.gz
2025.05.12 20:08:32 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:08:32 WARN  Bloop is running with 17.0.15 but your code requires 21.0.7 to compile, this might cause some compilation issues when using JDK API unsupported by the Bloop's current JVM version
2025.05.12 20:08:32 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:08:32 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:08:32 INFO  time: Imported build in 0.24s
2025.05.12 20:08:34 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:08:34 INFO  time: indexed workspace in 1.79s
2025.05.12 20:08:34 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:08:35 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:08:35 INFO  time: indexed workspace in 1.62s
2025.05.12 20:11:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.28s
2025.05.12 20:11:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 1ms
2025.05.12 20:11:17 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:17 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.23s
2025.05.12 20:11:20 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:11:20 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:20 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.25s
2025.05.12 20:11:20 INFO  time: Imported build in 0.28s
2025.05.12 20:11:21 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:11:21 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:21 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 20:11:21 INFO  time: Imported build in 0.18s
2025.05.12 20:11:22 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:11:22 INFO  time: indexed workspace in 1.71s
2025.05.12 20:11:23 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:11:23 INFO  time: indexed workspace in 1.82s
2025.05.12 20:11:30 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:11:30 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:30 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:11:31 INFO  time: Imported build in 0.23s
2025.05.12 20:11:32 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:11:32 INFO  time: indexed workspace in 1.3s
2025.05.12 20:11:32 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:11:32 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:32 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.22s
2025.05.12 20:11:33 INFO  time: Imported build in 0.26s
2025.05.12 20:11:34 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:11:34 INFO  time: indexed workspace in 1.15s
2025.05.12 20:11:41 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:11:41 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:41 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 20:11:42 INFO  time: Imported build in 0.2s
2025.05.12 20:11:43 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:11:43 INFO  time: indexed workspace in 1.15s
2025.05.12 20:11:47 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:11:47 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:47 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 20:11:47 INFO  time: Imported build in 0.18s
2025.05.12 20:11:48 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:11:48 INFO  time: indexed workspace in 1.24s
2025.05.12 20:11:51 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:51 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
May 12, 2025 8:11:56 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: expected identifier; obtained eof (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals/2025-05-12/r_scala-toplevel-mtags_20-11-56-271.md)
2025.05.12 20:11:56 ERROR /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
scala.meta.internal.tokenizers.package$UnexpectedInputEndException
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$nextToken$1(LegacyScanner.scala:172)
	at scala.Function0.apply$mcV$sp(Function0.scala:42)
	at scala.meta.internal.tokenizers.LegacyScanner.scala$meta$internal$tokenizers$LegacyScanner$$nextToken(LegacyScanner.scala:178)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:172)
	at scala.meta.internal.mtags.ScalaToplevelMtags$XtensionScanner.mtagsNextToken(ScalaToplevelMtags.scala:76)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptTrivia(ScalaToplevelMtags.scala:1034)
	at scala.meta.internal.mtags.ScalaToplevelMtags.parseMethodArgs(ScalaToplevelMtags.scala:718)
	at scala.meta.internal.mtags.ScalaToplevelMtags.parseMemberDefinitionLhs(ScalaToplevelMtags.scala:698)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop(ScalaToplevelMtags.scala:338)
	at scala.meta.internal.mtags.ScalaToplevelMtags.indexRoot(ScalaToplevelMtags.scala:88)
	at scala.meta.internal.metals.SemanticdbDefinition$.foreachWithReturnMtags(SemanticdbDefinition.scala:81)
	at scala.meta.internal.metals.Indexer.indexSourceFile(Indexer.scala:489)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3(Indexer.scala:587)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3$adapted(Indexer.scala:584)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1306)
	at scala.meta.internal.metals.Indexer.reindexWorkspaceSources(Indexer.scala:584)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$onChange$2(MetalsLspService.scala:914)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:840)

2025.05.12 20:11:56 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:11:56 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 20:11:56 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:11:57 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:11:57 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:11:58 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:11:58 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:00 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:12:00 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 74ms
May 12, 2025 8:12:00 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 563
2025.05.12 20:12:00 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:01 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:12:01 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 91ms
2025.05.12 20:12:02 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:02 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:03 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:03 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:03 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:04 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:12:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.21s
2025.05.12 20:12:06 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:17 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:17 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:17 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:18 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:12:18 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:12:18 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.12 20:12:19 INFO  time: Imported build in 0.2s
2025.05.12 20:12:19 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:20 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:12:20 INFO  time: indexed workspace in 1.21s
2025.05.12 20:12:20 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:12:20 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:12:20 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 20:12:20 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:13:18 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:13:19 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:13:20 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:13:20 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:13:20 WARN  bad option '-language.experimental.captureChecking' was ignored
2025.05.12 20:13:20 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.34s
2025.05.12 20:13:20 INFO  time: Imported build in 0.41s
2025.05.12 20:13:20 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:13:21 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:13:23 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:13:23 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:13:23 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.53s
2025.05.12 20:13:23 INFO  time: Imported build in 0.56s
2025.05.12 20:13:23 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:13:23 INFO  time: indexed workspace in 3.1s
2025.05.12 20:13:24 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:13:24 INFO  time: indexed workspace in 1.37s
2025.05.12 20:13:37 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:13:37 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.26s
2025.05.12 20:13:42 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:13:42 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
May 12, 2025 8:13:42 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: invalid choice(s) for -language: experimental.saferE (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/bloop/2025-05-12/r_invalid choice(s) fo..._20-13-42-525.md)
2025.05.12 20:13:42 INFO  scalac -help  gives more information
2025.05.12 20:13:42 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 23ms
2025.05.12 20:13:43 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:13:43 INFO  time: indexed workspace in 1.21s
2025.05.12 20:13:44 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
May 12, 2025 8:13:44 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: invalid choice(s) for -language: experimental.saferE (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/bloop/2025-05-12/r_invalid choice(s) fo..._20-13-42-525.md)
2025.05.12 20:13:44 INFO  scalac -help  gives more information
2025.05.12 20:13:44 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 19ms
May 12, 2025 8:13:44 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 739
2025.05.12 20:13:45 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:13:45 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:13:45 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
2025.05.12 20:13:45 INFO  time: Imported build in 0.2s
2025.05.12 20:13:46 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:13:46 INFO  time: indexed workspace in 1.29s
2025.05.12 20:13:56 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:13:56 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 20:14:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.25s
2025.05.12 20:14:07 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:07 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 84ms
2025.05.12 20:14:19 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:19 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 20:14:19 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:20 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:14:21 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:21 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.33s
2025.05.12 20:14:47 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:47 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.21s
2025.05.12 20:14:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
May 12, 2025 8:14:50 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 932
2025.05.12 20:14:52 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:52 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 94ms
2025.05.12 20:14:53 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:53 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 79ms
2025.05.12 20:14:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 20:14:56 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:14:56 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.26s
2025.05.12 20:15:15 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:15:15 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.33s
2025.05.12 20:15:19 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:15:19 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 20:15:39 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:15:39 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 98ms
2025.05.12 20:15:40 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:15:40 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:15:53 ERROR /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
scala.meta.internal.tokenizers.package$UnexpectedInputEndException
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$nextToken$1(LegacyScanner.scala:172)
	at scala.Function0.apply$mcV$sp(Function0.scala:42)
	at scala.meta.internal.tokenizers.LegacyScanner.scala$meta$internal$tokenizers$LegacyScanner$$nextToken(LegacyScanner.scala:178)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:172)
	at scala.meta.internal.mtags.ScalaToplevelMtags$XtensionScanner.mtagsNextToken(ScalaToplevelMtags.scala:76)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptToStatSep(ScalaToplevelMtags.scala:1027)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop$3(ScalaToplevelMtags.scala:1004)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptWhileIndented(ScalaToplevelMtags.scala:1012)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop(ScalaToplevelMtags.scala:364)
	at scala.meta.internal.mtags.ScalaToplevelMtags.indexRoot(ScalaToplevelMtags.scala:88)
	at scala.meta.internal.metals.SemanticdbDefinition$.foreachWithReturnMtags(SemanticdbDefinition.scala:81)
	at scala.meta.internal.metals.Indexer.indexSourceFile(Indexer.scala:489)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3(Indexer.scala:587)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3$adapted(Indexer.scala:584)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1306)
	at scala.meta.internal.metals.Indexer.reindexWorkspaceSources(Indexer.scala:584)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$onChange$2(MetalsLspService.scala:914)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:840)

2025.05.12 20:15:53 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:15:53 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 94ms
2025.05.12 20:15:56 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:15:56 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:16:00 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:00 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:16:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.21s
2025.05.12 20:16:07 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:07 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 20:16:14 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:14 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:16:21 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:21 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.25s
2025.05.12 20:16:35 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:35 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.3s
2025.05.12 20:16:40 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:40 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 73ms
2025.05.12 20:16:40 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:41 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.23s
2025.05.12 20:16:48 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:48 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 99ms
2025.05.12 20:16:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:16:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:17:25 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:17:25 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.2s
2025.05.12 20:17:27 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:17:27 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 20:17:31 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:17:31 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:17:55 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:17:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:17:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 20:17:55 INFO  time: Imported build in 0.19s
2025.05.12 20:17:57 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:17:57 INFO  time: indexed workspace in 1.58s
2025.05.12 20:18:09 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:18:09 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:18:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 20:18:10 INFO  time: Imported build in 0.2s
2025.05.12 20:18:11 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:18:11 INFO  time: indexed workspace in 1.2s
2025.05.12 20:18:11 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:18:11 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
2025.05.12 20:18:28 INFO  Cancelling compilation on scala-cli server
2025.05.12 20:18:28 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 6ms
2025.05.12 20:18:29 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 20:18:29 INFO  time: indexed workspace in 1.16s
2025.05.12 20:19:18 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:19:18 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.22s
2025.05.12 20:19:21 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:19:21 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
May 12, 2025 8:19:24 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1581
2025.05.12 20:19:25 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:19:25 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.23s
2025.05.12 20:19:29 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:19:29 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.22s
2025.05.12 20:19:37 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:19:37 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
May 12, 2025 8:20:16 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
2025.05.12 20:20:18 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:18 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.24s
2025.05.12 20:20:21 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:21 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.21s
2025.05.12 20:20:25 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:25 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 20:20:28 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:28 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 89ms
2025.05.12 20:20:35 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:35 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 82ms
2025.05.12 20:20:40 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:40 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:20:45 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:45 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.27s
2025.05.12 20:20:46 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:46 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 20:20:47 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:20:47 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:20:48 WARN  Could not load snapshot text for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
2025.05.12 20:20:49 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:49 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.23s
2025.05.12 20:20:53 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:53 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.12 20:20:59 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:20:59 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:21:00 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:21:00 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.24s
2025.05.12 20:21:30 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:21:30 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
May 12, 2025 8:21:57 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
2025.05.12 20:21:57 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:21:57 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
May 12, 2025 8:21:58 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
May 12, 2025 8:21:59 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
2025.05.12 20:22:01 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:22:01 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
May 12, 2025 8:22:02 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
May 12, 2025 8:22:02 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
2025.05.12 20:22:02 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:22:02 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
May 12, 2025 8:22:07 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1996
2025.05.12 20:22:09 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:22:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 20:22:10 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:22:10 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 80ms
2025.05.12 20:22:12 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:22:12 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 83ms
2025.05.12 20:22:15 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:22:15 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:22:17 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 2ms
2025.05.12 20:22:20 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:22:20 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.12 20:22:24 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:22:24 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 20:22:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:22:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.42s
2025.05.12 20:23:03 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:23:03 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.37s
2025.05.12 20:23:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:23:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.4s
2025.05.12 20:23:09 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:23:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.39s
2025.05.12 20:23:13 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:23:13 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.32s
2025.05.12 20:23:14 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:23:14 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.23s
2025.05.12 20:23:20 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:23:20 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.23s
2025.05.12 20:24:21 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:24:21 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.29s
2025.05.12 20:24:24 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:24:24 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.28s
2025.05.12 20:24:25 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:24:25 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.29s
2025.05.12 20:24:29 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:24:29 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.25s
2025.05.12 20:24:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:24:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 20:24:52 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:24:52 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
May 12, 2025 8:24:53 PM scala.meta.internal.metals.StdReporter create$$anonfun$1
SEVERE: java.lang.IndexOutOfBoundsException: -1 (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_compiler-error_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-24-53-203.md)
2025.05.12 20:24:53 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:24:53 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 80ms
2025.05.12 20:24:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:24:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.21s
May 12, 2025 8:25:51 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
May 12, 2025 8:25:51 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
May 12, 2025 8:25:52 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
May 12, 2025 8:25:53 PM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
2025.05.12 20:26:10 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:10 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 20:26:12 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:12 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.24s
2025.05.12 20:26:23 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:23 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 20:26:25 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:25 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 20:26:26 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:26 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.27s
2025.05.12 20:26:31 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:31 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.3s
2025.05.12 20:26:41 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:41 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.28s
2025.05.12 20:26:44 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:44 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.44s
2025.05.12 20:26:48 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:48 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.34s
2025.05.12 20:26:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.24s
2025.05.12 20:26:53 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:53 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.22s
2025.05.12 20:26:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:26:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.23s
May 12, 2025 8:26:58 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2733
2025.05.12 20:27:00 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:27:00 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 20:28:14 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:28:14 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 20:28:18 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:28:18 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.27s
2025.05.12 20:28:24 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:28:24 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.25s
2025.05.12 20:28:26 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:28:26 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.31s
2025.05.12 20:28:28 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:28:28 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.33s
2025.05.12 20:28:29 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:28:29 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.27s
2025.05.12 20:28:34 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:28:34 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:28:37 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:28:37 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 20:28:58 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:28:58 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:29:17 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:29:17 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 20:29:17 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:29:19 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 20:29:45 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:29:45 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 20:29:54 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:29:54 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
2025.05.12 20:29:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:29:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 20:29:59 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:29:59 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
May 12, 2025 8:30:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3041
May 12, 2025 8:30:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3042
2025.05.12 20:30:07 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:30:07 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:30:08 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:30:08 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 20:30:11 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:30:11 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 20:30:29 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:30:29 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
2025.05.12 20:30:30 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:30:30 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 93ms
2025.05.12 20:30:33 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:30:33 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:30:39 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:30:39 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 20:30:41 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:30:41 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 20:31:04 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:31:04 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 20:31:10 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:31:10 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:31:13 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:31:13 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 94ms
2025.05.12 20:31:14 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:31:14 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
2025.05.12 20:31:29 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:31:29 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 20:31:30 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:31:30 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.12 20:31:34 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:31:34 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 74ms
2025.05.12 20:31:43 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:31:43 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.12 20:31:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (1 scala source)
2025.05.12 20:31:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 21:02:29 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala. Using presentation compiler with project's scala-library version: 3.7.0
2025.05.12 21:02:29 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
2025.05.12 21:02:30 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:02:30 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.12 21:02:30 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:02:30 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 21:02:31 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 21:02:31 INFO  time: indexed workspace in 1.82s
2025.05.12 21:02:32 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:02:32 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 21:02:39 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:02:39 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 21:02:45 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:02:45 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.21s
2025.05.12 21:02:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:02:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 21:02:56 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:02:56 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 21:03:02 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:02 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 21:03:04 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:04 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 21:03:22 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:22 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 21:03:27 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:27 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 21:03:29 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:29 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 21:03:33 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:33 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.21s
May 12, 2025 9:03:48 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3663
2025.05.12 21:03:51 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:51 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 21:03:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.2s
2025.05.12 21:03:57 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:57 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
2025.05.12 21:03:59 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:03:59 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 21:04:12 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:04:12 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.12 21:04:17 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:04:17 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 21:04:27 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:04:27 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 21:04:28 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:04:28 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 21:04:57 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:04:57 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
May 12, 2025 9:04:58 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3827
2025.05.12 21:05:01 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:05:01 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 21:05:58 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:05:58 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:05:58 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:05:58 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:05:58 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:05:58 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:05:58 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:05:58 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:05:58 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:05:58 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
2025.05.12 21:06:56 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:06:56 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:06:56 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:06:56 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:06:56 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:06:56 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:06:56 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:06:56 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:06:57 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:06:57 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.22s
2025.05.12 21:06:58 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:06:58 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:06:58 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:06:58 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:06:58 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:06:58 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:06:58 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:06:58 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:06:58 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:06:58 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 21:07:29 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:07:29 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:29 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:29 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:07:29 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:07:29 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:29 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:29 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:07:30 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:07:30 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 21:07:35 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:07:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:35 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:35 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:07:35 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:07:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:35 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:35 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
May 12, 2025 9:07:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4023
2025.05.12 21:07:35 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:07:35 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.22s
2025.05.12 21:07:41 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:07:41 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:41 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:41 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:07:41 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:07:41 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:41 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:41 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:07:41 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:07:41 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.12 21:07:47 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:07:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:47 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:47 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:07:47 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:07:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:47 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:47 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:07:47 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:07:47 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
2025.05.12 21:07:54 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:07:54 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:54 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:54 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:07:54 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:07:54 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:07:54 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:07:54 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:07:54 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:07:54 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 21:08:05 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:08:05 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:08:05 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:08:05 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:08:05 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:08:05 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:08:05 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:08:05 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:08:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:08:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.2s
2025.05.12 21:08:09 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:08:09 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:08:09 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:08:09 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:08:09 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:08:09 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:08:09 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:08:09 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:08:09 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:08:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 21:08:14 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:08:14 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:08:14 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:08:14 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:08:14 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:08:14 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:08:14 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:08:14 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:08:14 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:08:14 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 21:09:11 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:09:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:11 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:11 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:11 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:09:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:11 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:11 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:11 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:09:11 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 21:09:14 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:09:14 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:14 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:14 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:14 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:09:14 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:14 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:14 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:14 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:09:14 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 21:09:16 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:09:16 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:16 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:16 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:16 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:09:16 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:16 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:16 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:17 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:09:17 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 21:09:20 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:09:20 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:20 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:20 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:20 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:09:20 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:20 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:20 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:20 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:09:20 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 21:09:36 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:09:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:36 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:36 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:36 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:09:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:36 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:36 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:36 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:09:36 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 21:09:39 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:09:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:39 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:39 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:39 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:09:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:39 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:39 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:39 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:09:39 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 21:09:45 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:09:45 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:45 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:45 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:45 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:09:45 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:45 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:45 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:46 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:09:46 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 21:09:51 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:09:51 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:51 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:51 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:51 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:09:51 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:51 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:51 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:51 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:09:51 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 21:09:53 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:09:53 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:53 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:53 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:53 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:09:53 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:09:53 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:09:53 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:09:53 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:09:53 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
May 12, 2025 9:09:59 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4555
2025.05.12 21:10:03 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:10:03 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:03 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:03 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:03 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:10:03 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:03 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:03 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:03 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:10:03 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.12 21:10:04 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:10:04 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:04 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:04 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:04 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:10:04 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:04 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:04 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:04 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:10:04 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 21:10:11 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:10:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:11 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:11 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:11 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:10:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:11 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:11 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:11 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:10:11 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 21:10:47 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:10:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:47 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:47 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:47 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:10:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:47 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:47 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:47 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:10:47 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 21:10:49 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:10:49 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:49 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:49 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:49 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:10:49 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:10:49 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:10:49 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:10:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:10:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 21:11:03 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:11:03 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:11:03 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:11:03 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:11:03 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:11:03 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:11:03 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:11:03 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:11:03 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:11:03 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.21s
2025.05.12 21:11:06 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:11:06 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:11:06 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:11:06 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:11:06 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:11:06 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:11:06 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:11:06 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:11:06 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:11:06 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 21:11:32 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:11:32 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:11:32 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:11:32 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:11:32 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:11:32 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:11:32 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:11:32 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:11:32 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:11:32 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 21:19:05 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/project.scala. Using presentation compiler with project's scala-library version: 3.7.0
2025.05.12 21:19:05 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/project.scala
2025.05.12 21:19:05 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:19:05 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:05 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:19:05 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:19:05 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:19:05 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:05 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:19:05 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:19:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:19:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.31s
2025.05.12 21:19:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:19:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.21s
2025.05.12 21:19:07 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:19:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:07 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:19:07 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:19:07 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:19:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:07 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:19:07 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:19:07 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:19:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:07 INFO  Cancelling compilation on scala-cli server
2025.05.12 21:19:07 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:19:07 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.24s
2025.05.12 21:19:07 INFO  time: Imported build in 0.31s
2025.05.12 21:19:09 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 21:19:09 INFO  time: indexed workspace in 3.91s
2025.05.12 21:19:11 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 21:19:11 INFO  time: indexed workspace in 3.15s
2025.05.12 21:19:11 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:19:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:11 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:19:11 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:19:11 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:19:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:11 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:19:11 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:19:11 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:19:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:26 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:19:27 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 1.36s
2025.05.12 21:19:28 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:19:28 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:28 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:19:28 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:19:28 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:19:28 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:28 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:19:28 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:19:28 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:19:28 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:33 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:19:33 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.12 21:19:53 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:19:53 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:53 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:19:53 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:19:53 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:19:53 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:19:53 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:19:53 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.12 21:20:05 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:20:05 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:20:05 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:20:05 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:20:05 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala. Using presentation compiler with project's scala-library version: 3.7.0
2025.05.12 21:20:05 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala
2025.05.12 21:20:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:20:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.12 21:20:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:20:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.12 21:20:05 WARN  Invalid text document uri received from build server: file:///home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/project.scala
2025.05.12 21:20:06 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 21:20:06 INFO  time: indexed workspace in 1.32s
2025.05.12 21:20:07 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:20:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:20:07 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:20:07 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:20:08 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:20:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 1.01s
2025.05.12 21:21:24 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:21:24 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:21:24 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:21:24 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:21:24 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/
2025.05.12 21:21:24 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/
2025.05.12 21:21:24 INFO  BSP server: Downloading https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/maven-metadata.xml
2025.05.12 21:21:24 INFO  BSP server: Downloaded https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/maven-metadata.xml
2025.05.12 21:21:24 INFO  BSP server: Checking https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/
2025.05.12 21:21:24 INFO  BSP server: Checked https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/
2025.05.12 21:21:25 INFO  BSP server: Checking https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/maven-metadata.xml
2025.05.12 21:21:25 INFO  BSP server: Checked https://repo1.maven.org/maven2/org/scala-lang/scala3-library_3/maven-metadata.xml
2025.05.12 21:21:25 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 668μs
2025.05.12 21:21:30 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:21:30 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:21:30 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:21:30 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:21:30 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:21:30 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 21:22:07 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:22:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:22:07 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:22:07 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:22:07 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:22:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:22:07 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:22:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:22:07 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:22:07 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:22:07 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:22:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:22:07 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/project.scala. Using presentation compiler with project's scala-library version: 3.7.0
2025.05.12 21:22:08 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/project.scala
2025.05.12 21:22:08 INFO  Cancelling compilation on scala-cli server
2025.05.12 21:22:08 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:22:08 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.18s
2025.05.12 21:22:08 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:22:08 INFO  time: Imported build in 0.21s
2025.05.12 21:22:08 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:22:08 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.12 21:22:09 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 21:22:09 INFO  time: indexed workspace in 1.65s
2025.05.12 21:22:10 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:22:10 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:22:10 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:22:10 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:22:10 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:22:10 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:22:10 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:22:10 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 21:24:06 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:24:06 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:06 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:24:06 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:24:06 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:24:06 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:06 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:24:06 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:07 INFO  Cancelling compilation on scala-cli server
2025.05.12 21:24:07 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:24:07 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.12 21:24:07 INFO  time: Imported build in 0.18s
2025.05.12 21:24:10 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 21:24:10 INFO  time: indexed workspace in 3.03s
2025.05.12 21:24:11 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:24:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:11 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:24:11 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:24:11 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:24:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:11 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:24:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:12 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:24:12 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.47s
2025.05.12 21:24:32 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:24:32 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:32 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:24:32 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:24:32 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:24:32 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:32 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:24:32 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:36 INFO  Cancelling compilation on scala-cli server
2025.05.12 21:24:36 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:24:36 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.12 21:24:36 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^{fs} = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^{fs} =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^{l} =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.12 21:24:36 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/project.scala
<empty>
2025.05.12 21:24:36 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.43s
2025.05.12 21:24:37 INFO  time: Imported build in 0.51s
2025.05.12 21:24:39 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 21:24:39 INFO  time: indexed workspace in 2.15s
2025.05.12 21:24:39 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:24:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:39 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:24:39 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:24:39 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:24:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:39 INFO  BSP server: [warn] ./code/project.scala:1:1
2025.05.12 21:24:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:52 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.12 21:24:52 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.12 21:24:52 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^{fs} = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^{fs} =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^{l} =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.12 21:24:52 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/project.scala
<empty>
2025.05.12 21:24:52 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.72s
2025.05.12 21:24:53 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:24:53 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:53 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:24:53 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:24:53 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:24:53 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:54 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
May 12, 2025 9:24:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4874
2025.05.12 21:24:54 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.12 21:24:54 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^{fs} = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^{fs} =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^{l} =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.12 21:24:54 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:24:54 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.12 21:24:54 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^{fs} = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^{fs} =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^{l} =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.12 21:24:54 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.19s
2025.05.12 21:24:54 WARN  Invalid text document uri received from build server: file:///home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/project.scala
2025.05.12 21:24:55 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.12 21:24:55 INFO  time: indexed workspace in 1.49s
2025.05.12 21:24:55 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:24:55 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:55 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:24:55 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:24:55 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:24:55 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:24:56 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:24:56 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.12 21:24:56 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^{fs} = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^{fs} =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^{l} =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.12 21:24:56 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.79s
2025.05.12 21:26:09 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:26:09 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:26:09 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:26:09 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:26:09 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:26:09 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:26:09 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:26:09 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.12 21:26:09 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^{fs} = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^{fs} =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int] =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^?
      }
  }
}
2025.05.12 21:26:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.22s
2025.05.12 21:26:14 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:26:14 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:26:14 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:26:14 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:26:14 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:26:14 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:26:14 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:26:14 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.12 21:26:14 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^{fs} = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^{fs} =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.12 21:26:14 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.2s
2025.05.12 21:26:37 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.12 21:26:37 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:26:37 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.12 21:26:37 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.12 21:26:37 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.12 21:26:37 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.12 21:26:37 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.12 21:26:37 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.12 21:26:37 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.12 21:26:37 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.13 08:33:28 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:33:28 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:33:28 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:33:28 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:33:28 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:33:28 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:33:28 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.13 08:33:28 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:33:28 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:33:28 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.13 08:33:31 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:33:31 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:33:31 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:33:31 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:33:31 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:33:31 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:33:31 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (2 scala sources)
2025.05.13 08:33:31 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:33:31 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:33:31 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 87ms
2025.05.13 08:45:44 INFO  no build target found for /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala. Using presentation compiler with project's scala-library version: 3.7.0
2025.05.13 08:45:44 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:45:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:44 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:45:44 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:45:44 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:45:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:44 WARN  no build target for: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
2025.05.13 08:45:44 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:45:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:45:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:45:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
<empty>
2025.05.13 08:45:44 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.13 08:45:44 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:45:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:45:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:45:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
<empty>
2025.05.13 08:45:44 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.13 08:45:45 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.13 08:45:45 INFO  time: indexed workspace in 0.9s
2025.05.13 08:45:45 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:45:45 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:45 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:45:45 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:45:45 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:45:45 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:44 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:45:45 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:45:45 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:45:45 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
<empty>
2025.05.13 08:45:45 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 90ms
2025.05.13 08:45:52 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:45:52 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:52 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:45:52 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:45:52 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:45:52 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:52 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:45:52 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:53 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:45:53 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:45:53 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:45:53 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
<empty>
2025.05.13 08:45:53 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 90ms
May 13, 2025 8:45:54 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5011
2025.05.13 08:45:57 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:45:57 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:57 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:45:57 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:45:57 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:45:57 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:57 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:45:57 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:57 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:45:57 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:45:57 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:45:57 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  final lazy module val Thin: Thin = new Thin()
  @SourceFile("code/03-thin-fat-arrows.scala") final module class Thin() extends
     Object() {
    private[this] type $this = Thin.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[Thin.type])
  }
}
2025.05.13 08:45:57 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 84ms
2025.05.13 08:45:59 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:45:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:59 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:45:59 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:45:59 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:45:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:59 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:45:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:45:59 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:45:59 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:45:59 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:45:59 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") final module class ThinFatArrows
    () extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val fs: ThinFatArrows.FileSystem^? = new ThinFatArrows.FileSystem()
        val xs: LazyList[Int]^? = ThinFatArrows.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: ThinFatArrows.FileSystem^) extends Object() {
      val fs: ThinFatArrows.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: ThinFatArrows.FileSystem^): LazyList[Int]^? =
      {
        val l: ThinFatArrows.Logger^{fs} = new ThinFatArrows.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:45:59 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 92ms
2025.05.13 08:46:04 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:46:04 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:46:04 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:46:04 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:46:04 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:46:04 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:46:04 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:46:04 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:46:04 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:46:04 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 52ms
2025.05.13 08:46:08 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:46:08 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:46:08 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:46:08 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:46:08 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:46:08 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:46:08 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:46:08 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:46:09 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:46:09 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:46:09 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:46:09 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") final module class ThinFatArrows
    () extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit = ???
  }
}
2025.05.13 08:46:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 89ms
2025.05.13 08:48:13 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:48:13 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:48:13 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:48:13 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:48:13 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:48:13 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:48:13 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:48:13 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:48:13 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:48:13 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:48:13 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:48:13 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") final module class ThinFatArrows
    () extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit = ???
  }
}
2025.05.13 08:48:13 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
May 13, 2025 8:48:50 AM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: expected identifier; obtained eof (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals/2025-05-13/r_scala-toplevel-mtags_08-48-50-425.md)
2025.05.13 08:48:50 ERROR /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
scala.meta.internal.tokenizers.package$UnexpectedInputEndException
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$nextToken$1(LegacyScanner.scala:172)
	at scala.Function0.apply$mcV$sp(Function0.scala:42)
	at scala.meta.internal.tokenizers.LegacyScanner.scala$meta$internal$tokenizers$LegacyScanner$$nextToken(LegacyScanner.scala:178)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:172)
	at scala.meta.internal.mtags.ScalaToplevelMtags$XtensionScanner.mtagsNextToken(ScalaToplevelMtags.scala:76)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptTrivia(ScalaToplevelMtags.scala:1034)
	at scala.meta.internal.mtags.ScalaToplevelMtags.parseMethodArgs(ScalaToplevelMtags.scala:718)
	at scala.meta.internal.mtags.ScalaToplevelMtags.parseMemberDefinitionLhs(ScalaToplevelMtags.scala:698)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop(ScalaToplevelMtags.scala:338)
	at scala.meta.internal.mtags.ScalaToplevelMtags.indexRoot(ScalaToplevelMtags.scala:88)
	at scala.meta.internal.metals.SemanticdbDefinition$.foreachWithReturnMtags(SemanticdbDefinition.scala:81)
	at scala.meta.internal.metals.Indexer.indexSourceFile(Indexer.scala:489)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3(Indexer.scala:587)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3$adapted(Indexer.scala:584)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1306)
	at scala.meta.internal.metals.Indexer.reindexWorkspaceSources(Indexer.scala:584)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$onChange$2(MetalsLspService.scala:914)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:840)

2025.05.13 08:48:50 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:48:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:48:50 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:48:50 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:48:50 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:48:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:48:50 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:48:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:48:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:48:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 63ms
2025.05.13 08:49:46 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:49:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:46 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:49:46 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:49:46 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:49:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:46 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:49:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:46 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:49:46 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 65ms
2025.05.13 08:49:47 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:49:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:47 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:49:47 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:49:47 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:49:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:47 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:49:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:48 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:49:48 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 70ms
2025.05.13 08:49:50 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:49:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:50 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:49:50 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:49:50 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:49:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:50 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:49:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:49:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 86ms
May 13, 2025 8:49:51 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5188
2025.05.13 08:49:55 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:49:55 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:55 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:49:55 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:49:55 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:49:55 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:55 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:49:55 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:49:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 50ms
2025.05.13 08:49:57 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:49:57 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:57 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:49:57 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:49:57 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:49:57 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:57 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:49:57 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:57 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:49:57 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 40ms
2025.05.13 08:49:58 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:49:58 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:58 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:49:58 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:49:58 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:49:58 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:58 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:49:58 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:49:58 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:49:58 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 60ms
2025.05.13 08:50:00 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:00 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:00 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:00 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:00 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:00 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:00 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:00 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:00 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:00 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 68ms
2025.05.13 08:50:02 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:02 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:02 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:02 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:02 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:02 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:02 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:02 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:02 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:02 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:50:02 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:50:02 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") final module class ThinFatArrows
    () extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit = ???
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:50:02 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 92ms
2025.05.13 08:50:21 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:21 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:21 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:21 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:21 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:21 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:21 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:21 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:21 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:21 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:50:21 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:50:21 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") final module class ThinFatArrows
    () extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit = ???
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:50:21 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.13 08:50:26 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:26 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:26 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:26 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:26 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:26 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:26 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:26 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:26 INFO  Cancelling compilation on scala-cli server
2025.05.13 08:50:26 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:26 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:50:26 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:50:26 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit = ???
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:50:26 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 88ms
2025.05.13 08:50:27 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.13 08:50:27 INFO  time: indexed workspace in 0.75s
2025.05.13 08:50:27 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:27 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:27 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:27 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:27 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:27 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:27 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:27 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:27 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:27 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:50:27 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:50:27 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit = ???
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:50:27 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 82ms
2025.05.13 08:50:36 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:36 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:36 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:36 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:36 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:36 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:36 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 72ms
2025.05.13 08:50:47 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:47 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:47 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:47 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:47 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:47 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:47 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 69ms
2025.05.13 08:50:48 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:48 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:48 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:48 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:48 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:48 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:48 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:48 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:48 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:48 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 51ms
2025.05.13 08:50:49 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:49 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:49 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:49 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:49 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:49 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:49 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:49 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:49 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:49 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:50:49 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:50:49 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        ThinFatArrows.thinFunction((f: Int) => f)
        ()
      }
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:50:49 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 85ms
2025.05.13 08:50:51 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:51 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:51 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:51 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:51 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:51 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:51 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:51 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:51 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:51 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:50:51 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:50:51 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        ThinFatArrows.thinFunction((f: Int) => f)
        ()
      }
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:50:51 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 79ms
2025.05.13 08:50:55 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:55 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:55 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:55 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:55 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:55 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:55 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:55 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:55 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:55 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 46ms
2025.05.13 08:50:59 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:50:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:59 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:50:59 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:50:59 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:50:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:59 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:50:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:50:59 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:50:59 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:50:59 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:50:59 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        ThinFatArrows.thinFunction((f: Int) => f.*(2))
        ()
      }
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:50:59 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 84ms
2025.05.13 08:51:07 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:51:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:07 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:51:07 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:51:07 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:51:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:07 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:51:07 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:07 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:51:07 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:51:07 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:51:07 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val res: Int = ThinFatArrows.thinFunction((f: Int) => f.*(2))
        ()
      }
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:51:07 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 84ms
2025.05.13 08:51:13 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:51:13 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:13 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:51:13 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:51:13 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:51:13 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:13 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:51:13 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:13 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:51:13 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:51:13 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:51:13 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val res: Int = ThinFatArrows.thinFunction((f: Int) => f.*(2))
        println(res)
      }
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:51:13 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 85ms
2025.05.13 08:51:32 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:51:32 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:32 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:51:32 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:51:32 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:51:32 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:32 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:51:32 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:32 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:51:32 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 54ms
2025.05.13 08:51:36 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:51:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:36 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:51:36 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:51:36 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:51:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:36 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:51:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:36 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:51:36 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 56ms
2025.05.13 08:51:43 ERROR /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
scala.meta.internal.tokenizers.package$UnexpectedInputEndException
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$nextToken$1(LegacyScanner.scala:172)
	at scala.Function0.apply$mcV$sp(Function0.scala:42)
	at scala.meta.internal.tokenizers.LegacyScanner.scala$meta$internal$tokenizers$LegacyScanner$$nextToken(LegacyScanner.scala:178)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:172)
	at scala.meta.internal.mtags.ScalaToplevelMtags$XtensionScanner.mtagsNextToken(ScalaToplevelMtags.scala:76)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptToStatSep(ScalaToplevelMtags.scala:1027)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop$3(ScalaToplevelMtags.scala:1004)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptWhileIndented(ScalaToplevelMtags.scala:1012)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop(ScalaToplevelMtags.scala:364)
	at scala.meta.internal.mtags.ScalaToplevelMtags.indexRoot(ScalaToplevelMtags.scala:88)
	at scala.meta.internal.metals.SemanticdbDefinition$.foreachWithReturnMtags(SemanticdbDefinition.scala:81)
	at scala.meta.internal.metals.Indexer.indexSourceFile(Indexer.scala:489)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3(Indexer.scala:587)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3$adapted(Indexer.scala:584)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1306)
	at scala.meta.internal.metals.Indexer.reindexWorkspaceSources(Indexer.scala:584)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$onChange$2(MetalsLspService.scala:914)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:840)

2025.05.13 08:51:43 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:51:43 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:43 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:51:43 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:51:43 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:51:43 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:43 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:51:43 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:43 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:51:43 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 65ms
2025.05.13 08:51:46 ERROR /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
scala.meta.internal.tokenizers.package$UnexpectedInputEndException
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$nextToken$1(LegacyScanner.scala:172)
	at scala.Function0.apply$mcV$sp(Function0.scala:42)
	at scala.meta.internal.tokenizers.LegacyScanner.scala$meta$internal$tokenizers$LegacyScanner$$nextToken(LegacyScanner.scala:178)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:172)
	at scala.meta.internal.mtags.ScalaToplevelMtags$XtensionScanner.mtagsNextToken(ScalaToplevelMtags.scala:76)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptToStatSep(ScalaToplevelMtags.scala:1027)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop$3(ScalaToplevelMtags.scala:1004)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptWhileIndented(ScalaToplevelMtags.scala:1012)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop(ScalaToplevelMtags.scala:364)
	at scala.meta.internal.mtags.ScalaToplevelMtags.indexRoot(ScalaToplevelMtags.scala:88)
	at scala.meta.internal.metals.SemanticdbDefinition$.foreachWithReturnMtags(SemanticdbDefinition.scala:81)
	at scala.meta.internal.metals.Indexer.indexSourceFile(Indexer.scala:489)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3(Indexer.scala:587)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3$adapted(Indexer.scala:584)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1306)
	at scala.meta.internal.metals.Indexer.reindexWorkspaceSources(Indexer.scala:584)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$onChange$2(MetalsLspService.scala:914)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:840)

2025.05.13 08:51:46 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:51:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:46 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:51:46 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:51:46 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:51:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:46 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:51:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:46 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:51:46 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.13 08:51:47 ERROR /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
scala.meta.internal.tokenizers.package$UnexpectedInputEndException
	at scala.meta.internal.tokenizers.LegacyScanner.$anonfun$nextToken$1(LegacyScanner.scala:172)
	at scala.Function0.apply$mcV$sp(Function0.scala:42)
	at scala.meta.internal.tokenizers.LegacyScanner.scala$meta$internal$tokenizers$LegacyScanner$$nextToken(LegacyScanner.scala:178)
	at scala.meta.internal.tokenizers.LegacyScanner.nextToken(LegacyScanner.scala:172)
	at scala.meta.internal.mtags.ScalaToplevelMtags$XtensionScanner.mtagsNextToken(ScalaToplevelMtags.scala:76)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptToStatSep(ScalaToplevelMtags.scala:1027)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop$3(ScalaToplevelMtags.scala:1004)
	at scala.meta.internal.mtags.ScalaToplevelMtags.acceptWhileIndented(ScalaToplevelMtags.scala:1012)
	at scala.meta.internal.mtags.ScalaToplevelMtags.loop(ScalaToplevelMtags.scala:364)
	at scala.meta.internal.mtags.ScalaToplevelMtags.indexRoot(ScalaToplevelMtags.scala:88)
	at scala.meta.internal.metals.SemanticdbDefinition$.foreachWithReturnMtags(SemanticdbDefinition.scala:81)
	at scala.meta.internal.metals.Indexer.indexSourceFile(Indexer.scala:489)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3(Indexer.scala:587)
	at scala.meta.internal.metals.Indexer.$anonfun$reindexWorkspaceSources$3$adapted(Indexer.scala:584)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1306)
	at scala.meta.internal.metals.Indexer.reindexWorkspaceSources(Indexer.scala:584)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$onChange$2(MetalsLspService.scala:914)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.lang.Thread.run(Thread.java:840)

2025.05.13 08:51:47 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:51:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:47 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:51:47 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:51:47 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:51:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:47 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:51:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:46 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:51:47 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.16s
2025.05.13 08:51:49 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:51:49 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:49 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:51:49 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:51:49 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:51:49 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:49 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:51:49 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:51:49 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:51:49 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.13 08:52:17 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:17 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:17 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:17 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:17 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:17 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:17 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:17 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:17 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:17 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 50ms
2025.05.13 08:52:21 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:21 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:21 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:21 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:21 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:21 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:21 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:21 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:21 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:21 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 53ms
2025.05.13 08:52:23 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:23 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:23 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:23 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:23 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:23 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:23 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:23 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:23 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:23 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 53ms
2025.05.13 08:52:25 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:25 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:25 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:25 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:25 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:25 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:25 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:25 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:25 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:25 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 87ms
2025.05.13 08:52:27 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:27 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:27 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:27 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:27 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:27 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:27 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:27 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:27 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:27 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.17s
2025.05.13 08:52:29 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:29 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:29 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:29 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:29 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:29 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:29 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:29 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:29 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:29 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 56ms
2025.05.13 08:52:36 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:36 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:36 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:36 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:36 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:36 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:36 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.13 08:52:44 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:44 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:44 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:44 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:44 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:44 INFO  Cancelling compilation on scala-cli server
2025.05.13 08:52:44 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:44 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 52ms
2025.05.13 08:52:44 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.13 08:52:44 INFO  time: indexed workspace in 0.81s
2025.05.13 08:52:45 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:45 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:45 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:45 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:45 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:45 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:45 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:45 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:44 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:45 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 44ms
2025.05.13 08:52:47 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:47 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:47 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:47 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:47 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:47 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:47 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:47 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:52:47 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:52:47 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") final module class ThinFatArrows
    () extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val res: Int =
          ThinFatArrows.thinFunction((f: Int) =>
            if f.<(0) then throw new Exception("Negative number") else f.*(2))
        println(res)
      }
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:52:47 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 83ms
2025.05.13 08:52:50 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:52:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:50 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:52:50 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:52:50 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:52:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:50 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:52:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:52:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:52:50 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:52:50 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:52:50 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") final module class ThinFatArrows
    () extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val res: Int =
          ThinFatArrows.thinFunction((f: Int) =>
            if f.<(0) then throw new Exception("Negative number") else f.*(2))
        println(res)
      }
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:52:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.13 08:53:11 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:53:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:53:11 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:53:11 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:53:11 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:53:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:53:11 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:53:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:53:11 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:53:11 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") final module class LeakingLogger()
     extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:53:11 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") final module class LoggerExample()
     extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:53:11 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") final module class ThinFatArrows
    () extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val res: Int =
          ThinFatArrows.thinFunction((f: Int) =>
            if f.<(0) then throw new Exception("Negative number") else f.*(2))
        println(res)
      }
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:53:11 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 82ms
2025.05.13 08:53:34 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:53:34 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:53:34 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:53:34 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:53:34 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:53:34 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:53:34 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:53:34 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:53:34 INFO  Cancelling compilation on scala-cli server
2025.05.13 08:53:34 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:53:34 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
2025.05.13 08:53:35 INFO  time: Imported build in 0.15s
2025.05.13 08:53:35 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-17-openjdk/src.zip, /usr/lib/jvm/java-17-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.13 08:53:35 INFO  time: indexed workspace in 0.87s
2025.05.13 08:53:36 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:53:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:53:36 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:53:36 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:53:36 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:53:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:53:36 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:53:36 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:53:36 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:53:36 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.13 08:56:35 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:56:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:56:35 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:56:35 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:56:35 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:56:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:56:35 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:56:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:56:36 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:56:36 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 74ms
2025.05.13 08:56:41 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:56:41 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:56:41 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:56:41 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:56:41 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:56:41 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:56:41 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:56:41 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:56:41 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:56:41 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.13 08:56:44 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:56:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:56:44 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:56:44 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:56:44 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:56:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:56:44 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:56:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:56:44 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:56:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:56:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:56:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      try 
        {
          final given erased val canThrow$1: CanThrow[Exception]^ =
            scala.compiletime.erasedValue[box CanThrow[Exception]^?]
          {
            val res: Int =
              ThinFatArrows.thinFunction((f: Int) =>
                if f.<(0) then
                  (throw new Exception("Negative number")):
                    Nothing @requiresCapability(canThrow$1)
                 else f.*(2)
              )
            println(res)
          }
        }
       catch 
        {
          case e @ _:Exception =>
            println(e.getMessage())
        }
    def thinFunction(f: Int -> Int): Int = f.apply(42)
  }
}
2025.05.13 08:56:44 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.15s
2025.05.13 08:58:09 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:58:09 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:58:09 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:58:09 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:58:09 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:58:09 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:58:09 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:58:09 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:58:09 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:58:09 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:58:09 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:58:09 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      try 
        {
          final given erased val canThrow$1: CanThrow[Exception]^ =
            scala.compiletime.erasedValue[box CanThrow[Exception]^?]
          {
            val res: Int =
              ThinFatArrows.thinFunction((f: Int) =>
                if f.<(0) then
                  (throw new Exception("Negative number")):
                    Nothing @requiresCapability(canThrow$1)
                 else f.*(2)
              )
            println(res)
          }
        }
       catch 
        {
          case e @ _:Exception =>
            println(e.getMessage())
        }
    def thinFunction(f: Int => Int): Int = f.apply(42)
  }
}
2025.05.13 08:58:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.1s
2025.05.13 08:58:39 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:58:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:58:39 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:58:39 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:58:39 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:58:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:58:39 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:58:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:58:39 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:58:39 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:58:39 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:58:39 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      try 
        {
          final given erased val canThrow$1: CanThrow[Exception]^ =
            scala.compiletime.erasedValue[box CanThrow[Exception]^?]
          {
            val res: Int =
              ThinFatArrows.thinFunction((f: Int) =>
                if f.<(0) then
                  (throw new Exception("Negative number")):
                    Nothing @requiresCapability(canThrow$1)
                 else f.*(2)
              )
            println(res)
          }
        }
       catch 
        {
          case e @ _:Exception =>
            println(e.getMessage())
        }
    def thinFunction(f: Int => Int): Int = f.apply(-2)
  }
}
2025.05.13 08:58:39 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 97ms
2025.05.13 08:58:51 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:58:51 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:58:51 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:58:51 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:58:51 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:58:51 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:58:51 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:58:51 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:58:51 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:58:51 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 08:58:51 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 08:58:51 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      try 
        {
          final given erased val canThrow$1: CanThrow[Exception]^ =
            scala.compiletime.erasedValue[box CanThrow[Exception]^?]
          {
            val res: Int =
              ThinFatArrows.thinFunction((f: Int) =>
                if f.<(0) then
                  (throw new Exception("Negative number")):
                    Nothing @requiresCapability(canThrow$1)
                 else f.*(2)
              )
            println(res)
          }
        }
       catch 
        {
          case e @ _:Exception =>
            println(e.getMessage())
        }
    def thinFunction(f: Int => Int): Int = f.apply(-2)
  }
}
2025.05.13 08:58:51 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 97ms
2025.05.13 08:59:11 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:59:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:11 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:59:11 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:59:11 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:59:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:11 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:59:11 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:11 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:59:11 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 57ms
2025.05.13 08:59:35 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:59:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:35 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:59:35 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:59:35 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:59:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:35 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:59:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:35 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:59:35 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 78ms
2025.05.13 08:59:38 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:59:38 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:38 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:59:38 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:59:38 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:59:38 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:38 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:59:38 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:38 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:59:38 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 84ms
2025.05.13 08:59:46 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:59:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:46 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:59:46 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:59:46 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:59:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:46 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:59:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:46 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:59:46 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 54ms
2025.05.13 08:59:50 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 08:59:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:50 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 08:59:50 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 08:59:50 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 08:59:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:50 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 08:59:50 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 08:59:50 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 08:59:50 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 54ms
May 13, 2025 8:59:58 AM scala.meta.internal.metals.StdReporter create$$anonfun$1
SEVERE: java.lang.AssertionError: assertion failed (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-13/r_compiler-error_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e-test)_08-59-58-587.md)
May 13, 2025 8:59:59 AM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
May 13, 2025 8:59:59 AM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
2025.05.13 09:00:00 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:00:00 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:00 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:00:00 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:00:00 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:00:00 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:00 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:00:00 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:00 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:00:00 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 67ms
2025.05.13 09:00:21 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:00:21 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:21 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:00:21 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:00:21 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:00:21 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:21 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:00:21 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:21 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:00:21 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 88ms
2025.05.13 09:00:24 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:00:24 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:24 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:00:24 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:00:24 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:00:24 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:24 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:00:24 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:24 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:00:24 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 66ms
2025.05.13 09:00:35 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:00:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:35 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:00:35 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:00:35 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:00:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:35 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:00:35 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:35 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:00:35 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 72ms
2025.05.13 09:00:39 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:00:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:39 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:00:39 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:00:39 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:00:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:39 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:00:39 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:39 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:00:39 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 93ms
2025.05.13 09:00:52 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:00:52 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:52 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:00:52 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:00:52 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:00:52 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:52 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:00:52 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:53 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:00:53 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 86ms
2025.05.13 09:00:59 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:00:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:59 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:00:59 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:00:59 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:00:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:59 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:00:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:00:59 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:00:59 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.12s
2025.05.13 09:01:05 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:01:05 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:05 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:01:05 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:01:05 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:01:05 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:05 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:01:05 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:05 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:01:05 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 64ms
2025.05.13 09:01:08 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:01:08 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:08 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:01:08 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:01:08 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:01:08 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:08 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:01:08 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:09 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:01:09 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 68ms
2025.05.13 09:01:15 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:01:15 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:15 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:01:15 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:01:15 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:01:15 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:15 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:01:15 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:15 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:01:15 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 61ms
2025.05.13 09:01:26 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:01:26 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:26 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:01:26 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:01:26 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:01:26 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:26 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:01:26 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:26 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:01:26 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 67ms
2025.05.13 09:01:31 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:01:31 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:31 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:01:31 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:01:31 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:01:31 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:31 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:01:31 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:31 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:01:31 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 09:01:31 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 09:01:31 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleTheResult(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception =>
              println(e.getMessage())
          }
      }
    def doubleTheResult(f: () ?-> Int): Int = f.apply().*(2)
  }
}
2025.05.13 09:01:31 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 98ms
2025.05.13 09:01:44 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:01:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:44 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:01:44 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:01:44 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:01:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:44 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:01:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:01:44 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:01:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 09:01:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 09:01:44 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleTheResult(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception =>
              println(e.getMessage())
          }
      }
    def doubleTheResult(f: () ?=> Int): Int = f.apply().*(2)
  }
}
2025.05.13 09:01:44 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.13s
2025.05.13 09:03:13 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:03:13 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:03:13 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:03:13 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:03:13 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:03:13 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:03:13 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:03:13 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:03:13 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:03:13 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 09:03:13 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 09:03:13 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleTheResult(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception => println(e.getMessage())
          }
      }
    def doubleTheResult(f: () ?=> Int): Int = f.apply().*(2)
  }
}
2025.05.13 09:03:13 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.14s
May 13, 2025 9:03:14 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6850
2025.05.13 09:03:16 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:03:16 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:03:16 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:03:16 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:03:16 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:03:16 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:03:16 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:03:16 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:03:16 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:03:16 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 09:03:16 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 09:03:16 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleTheResult(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception => println(e.getMessage())
          }
      }
    def doubleTheResult(f: () ?=> Int): Int = f.apply().*(2)
  }
}
2025.05.13 09:03:16 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 99ms
2025.05.13 09:05:16 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:05:16 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:16 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:05:16 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:05:16 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:05:16 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:16 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:05:16 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:16 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:05:16 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 79ms
2025.05.13 09:05:19 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:05:19 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:19 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:05:19 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:05:19 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:05:19 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:19 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:05:19 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:19 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:05:19 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 09:05:19 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 09:05:19 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleIt(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception => println(e.getMessage())
          }
      }
    def doubleIt(f: () ?=> Int): Int = f.apply().*(2)
  }
}
2025.05.13 09:05:19 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.13 09:05:29 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:05:29 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:29 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:05:29 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:05:29 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:05:29 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:29 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:05:29 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:29 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:05:29 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 09:05:29 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 09:05:29 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleIt(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception => println(e.getMessage())
          }
      }
    def doubleIt(f: () ?-> Int): Int = f.apply().*(2)
  }
}
2025.05.13 09:05:29 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 97ms
2025.05.13 09:05:46 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:05:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:46 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:05:46 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:05:46 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:05:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:46 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:05:46 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:46 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:05:46 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 09:05:46 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 09:05:46 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleIt(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception => println(e.getMessage())
          }
      }
    def doubleIt(f: () ?=> Int): Int = f.apply().*(2)
  }
}
2025.05.13 09:05:46 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 87ms
May 13, 2025 9:05:56 AM scala.meta.internal.metals.StdReporter $anonfun$create$1
WARNING: empty definition using pc, found symbol in pc: `<none>`. (full report at: /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/.reports/metals-full/2025-05-12/r_empty-definition_(seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e)_20-20-16-770.md)
2025.05.13 09:05:59 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:05:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:59 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:05:59 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:05:59 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:05:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:59 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:05:59 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:05:59 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:05:59 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 68ms
May 13, 2025 9:06:00 AM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7000
2025.05.13 09:06:01 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:06:01 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:06:01 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:06:01 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:06:01 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:06:01 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:06:01 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:06:01 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:06:01 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:06:01 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 65ms
2025.05.13 09:06:04 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 09:06:04 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:06:04 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 09:06:04 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 09:06:04 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 09:06:04 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:06:04 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 09:06:04 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 09:06:04 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 09:06:04 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 09:06:04 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 09:06:04 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleIt(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception => println(e.getMessage())
          }
      }
    def doubleIt(f: () ?=> Int): Int = f.apply().*(2)
  }
}
2025.05.13 09:06:04 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.11s
2025.05.13 09:48:37 INFO  Shutting down server
2025.05.13 09:48:37 INFO  shutting down Metals
2025.05.13 09:48:37 INFO  Shut down connection with build server.
2025.05.13 09:48:37 INFO  Exiting server
2025.05.13 11:45:42 INFO  Started: Metals version 1.5.2 in folders '/home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3' for client Visual Studio Code 1.100.0.
2025.05.13 11:45:42 INFO  Attempting to connect to the build server...
2025.05.13 11:45:42 INFO  Running BSP server List(/usr/bin/scala-cli, bsp, --json-options, /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.scala-build/ide-options-v2.json, --json-launcher-options, /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.scala-build/ide-launcher-options.json, --envs-file, /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.scala-build/ide-envs.json, /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3)
2025.05.13 11:45:42 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/.metals/bsp.trace.json or /home/nicolas/.cache/metals/bsp.trace.json
May 13, 2025 11:45:42 AM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2025.05.13 11:45:42 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 11:45:42 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 11:45:42 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 11:45:42 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 11:45:42 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 11:45:42 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 11:45:42 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 11:45:42 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 11:45:42 INFO  BSP server: Starting compilation server
2025.05.13 11:45:44 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 11:45:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 11:45:44 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 11:45:44 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 11:45:44 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 11:45:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 11:45:44 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 11:45:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 11:45:44 INFO  BSP server: [warn] ./code/01-leaking-logger.scala:1:1
2025.05.13 11:45:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 11:45:44 INFO  BSP server: [warn] //> using option -language:experimental.captureChecking
2025.05.13 11:45:44 INFO  BSP server: [warn] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
2025.05.13 11:45:44 INFO  BSP server: [warn] ./code/02-logger-example.scala:1:1
2025.05.13 11:45:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 11:45:44 INFO  BSP server: [warn] ./code/03-thin-fat-arrows.scala:1:1
2025.05.13 11:45:44 INFO  BSP server: [warn] Using directives detected in multiple files. It is recommended to keep them centralized in the /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/project.scala file.
2025.05.13 11:45:44 INFO  time: Connected to build server in 2s
2025.05.13 11:45:44 INFO  Connected to Build server: scala-cli v1.8.0
2025.05.13 11:45:44 INFO  time: Imported build in 0.11s
2025.05.13 11:45:45 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 11:45:46 WARN  Could not find java sources in /usr/lib/jvm/src.zip, /usr/lib/jvm/lib/src.zip, /usr/lib/jvm/java-21-openjdk/src.zip, /usr/lib/jvm/java-21-openjdk/lib/src.zip. Java symbols will not be available.
2025.05.13 11:45:46 INFO  time: indexed workspace in 1.46s
2025.05.13 11:45:46 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 11:45:46 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 11:45:46 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleIt(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception => println(e.getMessage())
          }
      }
    def doubleIt(f: () ?=> Int): Int = f.apply().*(2)
  }
}
2025.05.13 11:45:46 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 1.65s
2025.05.13 11:45:46 INFO  compiling seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e (3 scala sources)
2025.05.13 11:45:46 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/01-leaking-logger.scala
package <empty> {
  import java.io.FileOutputStream
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LeakingLogger: LeakingLogger = new LeakingLogger()
  @SourceFile("code/01-leaking-logger.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LeakingLogger() extends Object() {
    private[this] type $this = LeakingLogger.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LeakingLogger.type])
    def main(args: Array[String]): Unit =
      {
        val a: () ->{f, f} Unit =
          LeakingLogger.usingLogFile[box () ->{f, f} Unit]((
            f: java.io.FileOutputStream^) => () =>
            {
              f.write(0)
            }
          )
        a.apply()
      }
    def usingLogFile[T](op: java.io.FileOutputStream^ => T): T =
      {
        val logFile: java.io.FileOutputStream^? =
          new java.io.FileOutputStream("log")
        val result: T^? = op.apply(logFile)
        logFile.close()
        result:T^{result}
      }
  }
}
2025.05.13 11:45:46 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/02-logger-example.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val LoggerExample: LoggerExample = new LoggerExample()
  @SourceFile("code/02-logger-example.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class LoggerExample() extends Object() {
    private[this] type $this = LoggerExample.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[LoggerExample.type])
    def main(args: Array[String]): Unit =
      {
        val fs: LoggerExample.FileSystem^? = new LoggerExample.FileSystem()
        val xs: LazyList[Int]^? = LoggerExample.test(fs)
        println(xs.take(5).toList)
      }
    class FileSystem() extends Object() {
      def write(s: String): Unit = println(s)
    }
    class Logger(fs: LoggerExample.FileSystem^) extends Object() {
      val fs: LoggerExample.FileSystem^
      def log(s: String): Unit = Logger.this.fs.write(s)
    }
    def test(fs: LoggerExample.FileSystem^): LazyList[Int]^? =
      {
        val l: LoggerExample.Logger^{fs} = new LoggerExample.Logger(fs)
        l.log("hello world!")
        val xs: LazyList[Int]^? =
          LazyList.from(1).map[Int]((i: Int) =>
            {
              l.log(
                _root_.scala.StringContext.apply(
                  ["computing elem # ","" : String]).s([i : Any])
              )
              i.*(i)
            }
          )
        xs:LazyList[Int]^{xs}
      }
  }
}
2025.05.13 11:45:46 INFO  [[syntax trees at end of                        cc]] // /home/nicolas/Documents/repos/seminar-2025-effect-systems-capture-checking-scala3/code/03-thin-fat-arrows.scala
package <empty> {
  @experimental("Added by -language:experimental.experimental.saferExceptions")
    final lazy module val ThinFatArrows: ThinFatArrows = new ThinFatArrows()
  @SourceFile("code/03-thin-fat-arrows.scala") @experimental(
    "Added by -language:experimental.experimental.saferExceptions") final module
     class ThinFatArrows() extends Object() {
    private[this] type $this = ThinFatArrows.type
    private def writeReplace(): AnyRef =
      new scala.runtime.ModuleSerializationProxy(classOf[ThinFatArrows.type])
    def main(args: Array[String]): Unit =
      {
        val input: Int = augmentString(args.apply(0)).toInt
        try 
          {
            final given erased val canThrow$1: CanThrow[Exception]^ =
              scala.compiletime.erasedValue[box CanThrow[Exception]^?]
            {
              val res: Int =
                ThinFatArrows.doubleIt(() =>
                  if input.<(0) then
                    (throw new Exception("Negative number")):
                      Nothing @requiresCapability(canThrow$1)
                   else input
                )
              println(res)
            }
          }
         catch 
          {
            case e @ _:Exception => println(e.getMessage())
          }
      }
    def doubleIt(f: () ?=> Int): Int = f.apply().*(2)
  }
}
2025.05.13 11:45:46 INFO  time: compiled seminar-2025-effect-systems-capture-checking-scala3_d5c0a6989e in 0.33s
